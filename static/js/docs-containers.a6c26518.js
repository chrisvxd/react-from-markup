(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{"./docs/containers.mdx":function(e,n,a){"use strict";a.r(n);var t=a("./node_modules/react/index.js"),r=a.n(t),o=a("./node_modules/@mdx-js/tag/dist/index.js");function m(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}n.default=function(e){var n=e.components;m(e,["components"]);return r.a.createElement(o.MDXTag,{name:"wrapper",components:n},r.a.createElement(o.MDXTag,{name:"h1",components:n,props:{id:"markup-containers"}},"Markup containers"),r.a.createElement(o.MDXTag,{name:"p",components:n},r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"react-from-markup")," will only rehydrate elements inside a ",r.a.createElement(o.MDXTag,{name:"em",components:n,parentName:"p"},"markup container"),"."),r.a.createElement(o.MDXTag,{name:"p",components:n},"A markup container is simply a DOM element that has a ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"data-react-from-markup-container")," attribute on it."),r.a.createElement(o.MDXTag,{name:"p",components:n},"You can have as many markup containers on your page as you like."),r.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"declaring-a-container"}},"Declaring a container"),r.a.createElement(o.MDXTag,{name:"p",components:n},"In your markup, simply wrap any elements that you wish to rehydrate in a container:"),r.a.createElement(o.MDXTag,{name:"pre",components:n},r.a.createElement(o.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-html"}},"<div data-react-from-markup-container>\n  <p>When the page loads, I'll be turned into a static React node.</p>\n</div>\n")))}}}]);