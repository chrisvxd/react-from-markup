(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"./docs/api/rehydrate.mdx":function(e,a,n){"use strict";n.r(a);var t=n("./node_modules/react/index.js"),r=n.n(t),o=n("./node_modules/@mdx-js/tag/dist/index.js");function m(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}a.default=function(e){var a=e.components;m(e,["components"]);return r.a.createElement(o.MDXTag,{name:"wrapper",components:a},r.a.createElement(o.MDXTag,{name:"h1",components:a,props:{id:"the-rehydrate-function"}},"The rehydrate function"),r.a.createElement(o.MDXTag,{name:"pre",components:a},r.a.createElement(o.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-javascript"}},"rehydrate(rootNode, rehydrators, options);\n")),r.a.createElement(o.MDXTag,{name:"h2",components:a,props:{id:"contract"}},"Contract"),r.a.createElement(o.MDXTag,{name:"p",components:a},"When run, ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"rehydrate")," will convert the contents of any ",r.a.createElement(o.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"/containers"}},"markup containers")," into React elements."),r.a.createElement(o.MDXTag,{name:"h2",components:a,props:{id:"parameters"}},"Parameters"),r.a.createElement(o.MDXTag,{name:"ul",components:a},r.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul"},r.a.createElement(o.MDXTag,{name:"p",components:a,parentName:"li"},r.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"rootNode"),": a node on your page where ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"react-from-markup")," should start looking for markup containers."),r.a.createElement(o.MDXTag,{name:"p",components:a,parentName:"li"},"A simple implementation would have the first child of your ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"<body />")," element be a ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"p"},'<div id="root" />'),", and put all your markup inside. Then, you can use ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"p"},'document.getElementById("root")')," as your ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"rootNode"),".")),r.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul"},r.a.createElement(o.MDXTag,{name:"p",components:a,parentName:"li"},r.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"rehydrators"),": a keyed object containing your rehydrator functions, each matching the ",r.a.createElement(o.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"/api/rehydrator"}},"rehydrator interface")),r.a.createElement(o.MDXTag,{name:"p",components:a,parentName:"li"},"A key of ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"SiteHeader")," means that the provided rehydrator will be run for an element with ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"p"},'data-rehydratable="SiteHeader"')," set.")),r.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul"},r.a.createElement(o.MDXTag,{name:"p",components:a,parentName:"li"},r.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"options"),": an object that configures ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"rehydrate()")),r.a.createElement(o.MDXTag,{name:"ul",components:a,parentName:"li"},r.a.createElement(o.MDXTag,{name:"li",components:a,parentName:"ul"},r.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"extra"),": an object that will be passed to each ",r.a.createElement(o.MDXTag,{name:"a",components:a,parentName:"li",props:{href:"/api/rehydrator"}},"rehydrator"),". Can be used to provide some page state information to your components, such as user information or analytics hooks.")))),r.a.createElement(o.MDXTag,{name:"h2",components:a,props:{id:"return-value"}},"Return value"),r.a.createElement(o.MDXTag,{name:"p",components:a},"Returns a ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"Promise")," that resolves when ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"rootNode")," has been rehydrated."),r.a.createElement(o.MDXTag,{name:"h2",components:a,props:{id:"example-usage"}},"Example usage"),r.a.createElement(o.MDXTag,{name:"pre",components:a},r.a.createElement(o.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"language-javascript"}},'import rehydrate from "react-from-markup";\nimport { rehydrator as siteHeaderRehydrator } from "./components/SiteHeader";\nimport { rehydrator as videoPlayerRehydrator } from "./components/VideoPlayer";\n\nrehydrate(\n  document.getElementById("root"),\n  {\n    SiteHeader: siteHeaderRehydrator,\n    VideoPlayer: videoPlayerRehydrator\n  },\n  {\n    extra: {\n      user: {\n        userName: document.body.dataset.userName,\n        userId: document.body.dataset.userId\n      }\n    }\n  }\n)\n')))}}}]);